# search in project folder, the dependencies manually put by user

if((NOT FREETYPE_LIBRARIES) OR (NOT FREETYPE_INCLUDE_DIRS))
  FIND_PATH(FREETYPELOCAL_INCLUDE_DIR_ft2build ft2build.h
    PATHS ${CMAKE_CURRENT_LIST_DIR}/../../windows/freetype2
    NO_DEFAULT_PATH
    NO_CMAKE_ENVIRONMENT_PATH
    NO_CMAKE_PATH
    NO_SYSTEM_ENVIRONMENT_PATH
    NO_CMAKE_SYSTEM_PATH
    NO_CMAKE_FIND_ROOT_PATH
  )
	
  FIND_PATH(FREETYPELOCAL_INCLUDE_DIR_freetype2 freetype/config/ftheader.h
    PATHS ${CMAKE_CURRENT_LIST_DIR}/../../windows/freetype2
    NO_DEFAULT_PATH
    NO_CMAKE_ENVIRONMENT_PATH
    NO_CMAKE_PATH
    NO_SYSTEM_ENVIRONMENT_PATH
    NO_CMAKE_SYSTEM_PATH
    NO_CMAKE_FIND_ROOT_PATH
  )

  FIND_LIBRARY(FREETYPELOCAL_LIBRARY freetype
    PATHS ${CMAKE_CURRENT_LIST_DIR}/../../windows/freetype2
    NO_DEFAULT_PATH
    NO_PACKAGE_ROOT_PATH
    NO_CMAKE_PATH
    NO_CMAKE_ENVIRONMENT_PATH
    NO_SYSTEM_ENVIRONMENT_PATH
    NO_CMAKE_SYSTEM_PATH
    NO_CMAKE_FIND_ROOT_PATH
  )

  # set the user variables
  IF(FREETYPELOCAL_INCLUDE_DIR_ft2build AND FREETYPELOCAL_INCLUDE_DIR_freetype2)
    SET(FREETYPE_INCLUDE_DIRS "${FREETYPE_INCLUDE_DIR_ft2build};${FREETYPE_INCLUDE_DIR_freetype2}")
  ENDIF()

  SET(FREETYPE_LIBRARIES "${FREETYPELOCAL_LIBRARY}")

  # handle the QUIETLY and REQUIRED arguments and set FREETYPE_FOUND to TRUE if
  # all listed variables are TRUE
  INCLUDE(FindPackageHandleStandardArgs)
  FIND_PACKAGE_HANDLE_STANDARD_ARGS(FREETYPE DEFAULT_MSG  FREETYPE_LIBRARIES  FREETYPE_INCLUDE_DIRS)

  MARK_AS_ADVANCED(FREETYPELOCAL_LIBRARY FREETYPELOCAL_INCLUDE_DIR_freetype2 FREETYPELOCAL_INCLUDE_DIR_ft2build)

endif()
